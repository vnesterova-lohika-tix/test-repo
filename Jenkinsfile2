

node('master') {
   BUILD_TRIGGER_BY = "${currentBuild.getBuildCauses()[0].userName}"
echo "BUILD_TRIGGER_BY: ${BUILD_TRIGGER_BY}"



    parameters {
        string(name: 'BRANCH', defaultValue: 'master', description: 'Choose branch')
        choice(choices:['Freeze', 'Unfreeze'], description: 'Freeze or unfreeze branch from merging', name: 'ACTION')
    }

withCredentials([string(credentialsId: 'ORG_TOKEN', variable: 'ORG_TOKEN')]) {
 def repos = ['repo1', 'repo2']
          repos.each() {

        switch(params.ACTION) {
  case "Freeze":
   bool = true
            stage('Freezing') {
        //  def repos = ['repo1', 'repo2']
        //   repos.each() {

                sh """
                echo $it
       echo "CURl here for ${it}"
 curl -d "frozen=$bool&user_name=${BUILD_TRIGGER_BY}" -X POST 'https://www.mergefreeze.com/api/branches/vnesterova-test-organization/${it}/$params.BRANCH/?access_token=$ORG_TOKEN'
            
"""
          //}
        }
    break
  case "Unfreeze":
   bool = false
            stage('Unfreezing') {
        //     def repos = ['repo1', 'repo2']
        //   repos.each() {
                sh """
 curl -d "frozen=$bool&user_name=${BUILD_TRIGGER_BY}" -X POST 'https://www.mergefreeze.com/api/branches/vnesterova-test-organization/${it}/$params.BRANCH/?access_token=$ORG_TOKEN'
 """
               
            
        }
    break
  default:
    result = "no such branch"
    break
}


        }
}
}
