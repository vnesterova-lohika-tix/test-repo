
node('master') {
   BUILD_TRIGGER_BY = "${currentBuild.getBuildCauses()[0].userName}"
echo "BUILD_TRIGGER_BY: ${BUILD_TRIGGER_BY}"

    parameters {
        string(name: 'BRANCH', defaultValue: 'master', description: 'Choose branch')
        choice(choices:['Freeze', 'Unfreeze'], description: 'Freeze or unfreeze branch from merging', name: 'ACTION')
    }

withCredentials([string(credentialsId: 'ORG_TOKEN', variable: 'ORG_TOKEN')]) {

        switch(params.ACTION) {
  case "Freeze":
   bool = true
            stage('Freezing') {
         
                sh """
                def full_string = "repo1 repo2"
def arr = full_string.split(" ")
                for (i in arr) {
 

 curl -d "frozen=$bool&user_name=${BUILD_TRIGGER_BY}" -X POST 'https://www.mergefreeze.com/api/branches/vnesterova-test-organization/${i}/$params.BRANCH/?access_token=$ORG_TOKEN'
            }
"""
            
        }
    break
  case "Unfreeze":
   bool = false
            stage('Unfreezing') {
            if (env.ACTION == 'Unfreeze') {
                sh """
 curl -d "frozen=$bool&user_name=${BUILD_TRIGGER_BY}" -X POST 'https://www.mergefreeze.com/api/branches/vnesterova-test-organization/repo2/$params.BRANCH/?access_token=$ORG_TOKEN'
 """
               
            }
        }
    break
  default:
    result = "no such branch"
    break
}



}
}
