//def branch = params.BRANCH
def branch = 'master'
def token_test_repo_master = '658a3396-ffad-41c2-8db5-07d023d047d0'
def token_test_repo_hotfix = '5cb5865a-04a6-400a-bb9d-3d19d80695ba'

//ORG_TOKEN = credentials('ORG_TOKEN')

node('master') {
    parameters {
        string(name: 'BRANCH', defaultValue: 'master', description: 'Choose branch')
        choice(choices:['Freeze', 'Unfreeze'], description: 'Freeze or unfreeze branch from merging', name: 'ACTION')
    }

withCredentials([string(credentialsId: 'ORG_TOKEN', variable: 'ORG_TOKEN')]) {
    // the code here can access $pass and $user

echo "My secret text is '${ORG_TOKEN}'"

        if (env.ACTION == 'Freeze') {
        stage('Freezing') {
        switch(params.BRANCH) {
  case "hotfix*":
    result = "hotfix"
    token = "5cb5865a-04a6-400a-bb9d-3d19d80695ba"
    break
  case "${branch}":
    result = "master"
    token = "658a3396-ffad-41c2-8db5-07d023d047d0"
    break
  default:
    result = "no such branch"
    break
}
echo "${result}"
                sh """
 curl -d "frozen=true&user_name=Valeriia Nesterova" -X POST 'https://www.mergefreeze.com/api/branches/vnesterova-lohika-tix/test-repo/$result/?access_token=$token'
"""
            echo 'You have frozen master branch'
        }

            }

               else {
        stage('Unfreezing') {
            if (env.ACTION == 'Unfreeze') {
                sh """
 curl -d "frozen=false&user_name=Valeriia Nesterova" -X POST 'https://www.mergefreeze.com/api/branches/vnesterova-lohika-tix/test-repo/$branch/?access_token=658a3396-ffad-41c2-8db5-07d023d047d0'
 """
                echo 'You have unfrozen master branch'
            }
        }
               }

}
}
